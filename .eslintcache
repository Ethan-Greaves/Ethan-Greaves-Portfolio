[{"D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\index.js":"1","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\App.js":"2","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\components\\landingPage\\landingPage.js":"3","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\client.js":"4","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\particles\\stars.js":"5","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\components\\navbar\\navigationBar.js":"6","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\components\\projects\\projects.js":"7","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\hooks\\useSanityFetchState.js":"8","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\hooks\\useToggle.js":"9","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\Wrappers\\externalLink.js":"10"},{"size":236,"mtime":1612395227250,"results":"11","hashOfConfig":"12"},{"size":1352,"mtime":1612736824022,"results":"13","hashOfConfig":"12"},{"size":2159,"mtime":1612735721548,"results":"14","hashOfConfig":"12"},{"size":132,"mtime":1612374577975,"results":"15","hashOfConfig":"12"},{"size":842,"mtime":1612704762703,"results":"16","hashOfConfig":"12"},{"size":201,"mtime":1612626024072,"results":"17","hashOfConfig":"12"},{"size":152,"mtime":1612626024077,"results":"18","hashOfConfig":"12"},{"size":647,"mtime":1612730307973,"results":"19","hashOfConfig":"12"},{"size":257,"mtime":1612729097863,"results":"20","hashOfConfig":"12"},{"size":182,"mtime":1612735483155,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"qhq80s",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\index.js",[],["47","48"],"D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\App.js",[],"D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\components\\landingPage\\landingPage.js",["49"],"import './landingPage.scss';\r\nimport '../../commonStyles/positions.scss';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\r\nimport { spacing } from '@material-ui/system';\r\nimport { Link } from 'react-router-dom';\r\nimport useSanityFetchState from '../../hooks/useSanityFetchState';\r\nimport ExternalLink from '../../Wrappers/externalLink';\r\n\r\nconst LandingPage = () => {\r\n\tconst [authorData, isLoaded] = useSanityFetchState(`*[_type == \"author\"]{\r\n\t\tname,\r\n\t\twelcome,\r\n\t\tbio,\r\n\t\t\"cv\": cv.asset->url,\r\n\t\temail,\r\n\t\t\"image\": image.asset->url,\r\n\t}`);\r\n\r\n\t//TODO Make this custom hook or find more efficient way\r\n\tconst checkIfButtonRedirects = (object) => {\r\n\t\tif (!object.redirect) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link to={object.link}>\r\n\t\t\t\t\t<Button variant='contained' id={object.style}>\r\n\t\t\t\t\t\t{object.text}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<ExternalLink to={object.link} newTab={true}>\r\n\t\t\t\t\t<Button variant='contained' id={object.style}>\r\n\t\t\t\t\t\t{object.text}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ExternalLink>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tif (isLoaded) {\r\n\t\t// Todo make this props or state\r\n\t\tconst buttonsInfo = [\r\n\t\t\t{ text: 'Download CV', style: 'side-left-btn', link: authorData[0].cv, redirect: true },\r\n\t\t\t{ text: 'Take a look', style: 'main-btn', link: '/projects', redirect: false },\r\n\t\t\t{\r\n\t\t\t\ttext: 'Get in touch',\r\n\t\t\t\tstyle: 'side-right-btn',\r\n\t\t\t\tlink: authorData[0].email,\r\n\t\t\t\tredirect: true,\r\n\t\t\t},\r\n\t\t];\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<div className='header'>\r\n\t\t\t\t\t<Typography variant='h3' align='center'>\r\n\t\t\t\t\t\tHi, I'm <span id='stand-out'>{authorData[0].name}.</span> Nice to meet you!\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Box pt={4} />\r\n\t\t\t\t\t<Typography align='center' variant='body1'>\r\n\t\t\t\t\t\t{authorData[0].bio}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Box pt={7} />\r\n\r\n\t\t\t\t\t<Grid container direction='row' alignItems='center' justify='center' spacing={10}>\r\n\t\t\t\t\t\t{buttonsInfo.map((button, i) => {\r\n\t\t\t\t\t\t\treturn <Grid item>{checkIfButtonRedirects(button)}</Grid>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t} else return null;\r\n};\r\n\r\nexport default LandingPage;\r\n","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\client.js",[],"D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\particles\\stars.js",[],"D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\components\\navbar\\navigationBar.js",["50","51","52"],"import React, { useState } from 'react';\r\nimport { Navbar, NavbarBrand, NavLink, NavItem } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavigationBar = () => {\r\n\treturn (\r\n\t\t<Navbar>\r\n\t\t\t<Link to='/projects'>\r\n\t\t\t\t<NavbarBrand>Brand link</NavbarBrand>\r\n\t\t\t</Link>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\components\\projects\\projects.js",[],"D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\hooks\\useSanityFetchState.js",["53","54"],"import React, { useState, useEffect } from 'react';\r\nimport useToggle from './useToggle';\r\nimport sanityClient from '../client';\r\n\r\nconst UseSanityFetchState = (requestedData) => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isLoaded, toggleIsLoaded] = useToggle(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!requestedData) return;\r\n\r\n\t\ttry {\r\n\t\t\tconst fetchData = async () => {\r\n\t\t\t\tconst response = await sanityClient.fetch(requestedData);\r\n\t\t\t\tsetData(response);\r\n\t\t\t\ttoggleIsLoaded();\r\n\t\t\t};\r\n\r\n\t\t\tfetchData();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn [data, isLoaded];\r\n};\r\n\r\nexport default UseSanityFetchState;\r\n","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\hooks\\useToggle.js",["55"],"import React, { useState } from 'react';\r\n\r\nconst UseToggle = (initialValue = false) => {\r\n\tconst [value, setValue] = useState(initialValue);\r\n\r\n\tconst toggle = () => {\r\n\t\tsetValue(!value);\r\n\t};\r\n\r\n\treturn [value, toggle];\r\n};\r\n\r\nexport default UseToggle;\r\n","D:\\Web Development\\Projects\\ethan-greaves-portfolio\\src\\Wrappers\\externalLink.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":5,"column":10,"nodeType":"62","messageId":"63","endLine":5,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"65","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"66","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":23,"column":5,"nodeType":"69","endLine":23,"endColumn":7,"suggestions":"70"},{"ruleId":"60","severity":1,"message":"64","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'spacing' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'requestedData' and 'toggleIsLoaded'. Either include them or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [requestedData, toggleIsLoaded]",{"range":"76","text":"77"},[569,571],"[requestedData, toggleIsLoaded]"]